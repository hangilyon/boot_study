사용자가 예매를 했으니 예매 결과보기 해야되니까 사용자 정보 저장
저장 프로젝트 생성
// movie_book project
	// Lombok , Spring Boot DevTools , MyBatis Framework
	Oracle Driver , Spring Reactive Web

	// table
		create table booking(
			book_date varchar2(30),
			book_name varchar2(30),
			book_phone varchar2(30), 
			book_count number,
			movie_id varchar2(30), 
			movie_title varchar2(30),
			movie_date varchar2(30)
		);

	// resources => server port 10002 , spring: datasource : driver-class-name...

	// movie-view SearchService booking method
	if(bool) 밑에
		Calendar cal = Calendar.getInstance();
		SimpleDateFormat format = 
				new SimpleDateFormat("yyyy/MM/dd-HH시mm분"); 
		dto.setBookDate(format.format(cal.getTime()) );
		int re = movieSearch.postForObject(
				movieBookUrl+"save/", dto, Integer.class);
		System.out.println("결과(1성공, 0실패) : "+re);

	// MovieBookRestController
		import org.springframework.beans.factory.annotation.Autowired;
		import org.springframework.web.bind.annotation.CrossOrigin;
		import org.springframework.web.bind.annotation.PostMapping;
		import org.springframework.web.bind.annotation.RequestBody;
		import org.springframework.web.bind.annotation.RequestMapping;
		import org.springframework.web.bind.annotation.RestController;
		import com.care.root.dto.MovieBookDto;
		import com.care.root.service.MovieBookService;

		@RestController
		@RequestMapping("book")
		@CrossOrigin
		public class MovieBookRestController {
			@Autowired MovieBookService mbs;
			@PostMapping("save")
			public Integer save(@RequestBody MovieBookDto dto) {
				return mbs.save(dto);
			}
	// MovieBookService
		import org.springframework.beans.factory.annotation.Autowired;
		import org.springframework.stereotype.Service;

		import com.care.root.dao.MovieBookDao;
		import com.care.root.dto.MovieBookDto;

		@Service
		public class MovieBookService {
			@Autowired MovieBookDao dao;
			public Integer save(MovieBookDto dto) {
				return dao.save(dto);
			}
		}
	// MovieBookDao
		import org.apache.ibatis.annotations.Insert;
		import com.care.root.dto.MovieBookDto;

		public interface MovieBookDao {
			@Insert(
		"insert into booking"
		+ "(book_date,book_name,book_phone,book_count,movie_id,movie_title,movie_date)"
		+"values"
		+ "(#{bookDate},#{bookName},#{bookPhone},#{bookCount},#{movieId},#{movieTitle},#{movieDate})"
					)
			public int save(MovieBookDto dto);
		}

// 예약 확인 method 
	// bookView.html
		<input type="text" id="ps" placeholder="전화번호로 검색">
		// 아래 버튼 두개는 기능이 같다. 아래 버튼은 thymeleaf 문법으로 작성
		<input type="button" onclick="psCheck()" value="검색">
		<input type="button" th:attr="onclick|psCheck()|" th:value="검색">	
	
		<script type="text/javascript">
		function psCheck(){
			phNum = $("#ps").val()
			bookSearch = "http://localhost:10002/book/booksearch/"
			$.ajax({
				url:bookSearch+phNum, type:"GET", dataType:"json",
				success: function(book){
					let html = "<h3>검색 결과</h3>"
					html += "<b>이름 : </b>"+book.bookName +"<br>"
					html += "<b>제목 : </b>"+book.movieTitle +"<hr width='300px'>"
					html += "<a href='' onclick='history.back()'>이전</a>"
					$("#wrap").html(html)
				},error:function(){ alert('문제 발생') }
			});
		}
		</script>
		
	// MovieBookRestController
		@GetMapping("booksearch/{bookPhone}")
		public MovieBookDto bookSearch(@PathVariable String bookPhone) {
			return mbs.bookSearch(bookPhone);
		}

	// MovieBookService
		public MovieBookDto bookSearch(String bookPhone) {
			return dao.bookSearch(bookPhone);
		}

	// MovieBookDao
		@Results(id="movieBookDto", value = {
				@Result(property = "bookDate", column="book_date"),
				@Result(property = "bookName", column="book_name"),
				@Result(property = "bookPhone", column="book_phone"),
				@Result(property = "bookCount", column="book_count"),
				@Result(property = "movieId", column="movie_id"),
				@Result(property = "movieTitle", column="movie_title"),
				@Result(property = "movieDate", column="movie_date")
		})
		@Select("select * from booking where book_phone = #{bookPhone}")
		public MovieBookDto bookSearch(String bookPhone);




















